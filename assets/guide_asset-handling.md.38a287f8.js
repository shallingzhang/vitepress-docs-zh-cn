import{_ as s,o as a,c as e,a as n}from"./app.d6ffb474.js";const C=JSON.parse('{"title":"资产处理","description":"","frontmatter":{},"headers":[{"level":2,"title":"公共文件","slug":"公共文件","link":"#公共文件","children":[]},{"level":2,"title":"Base URL","slug":"base-url","link":"#base-url","children":[]}],"relativePath":"guide/asset-handling.md","lastUpdated":null}'),o={name:"guide/asset-handling.md"},l=n(`<h1 id="资产处理" tabindex="-1">资产处理 <a class="header-anchor" href="#资产处理" aria-hidden="true">#</a></h1><p>所有 <code>Markdown</code> 文件都被编译成 <code>Vue</code> 组件并由 <code>Vite</code> 处理。您可以并且应该使用相对 <code>URL</code> 引用任何资产：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">![An image](./image.png)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>您可以使用绝对公共路径（基于项目根目录）或相对路径（基于文件系统）引用<code>markdown</code>文件中的静态资产、主题中的 <code>*.vue</code> 组件、样式和纯<code>.css</code>文件。后者类似于使用<code>vue-cli</code>或<code>webpack</code>的<code>file-loader</code>时所习惯的行为。 通用图像、媒体和字体文件类型会自动检测并作为资产包含。所有引用的资源（包括使用绝对路径的资源）都将复制到生产版本中具有哈希文件名的 <code>dist</code> 文件夹。不会复制从不引用的资源。与<code>vue-cli</code>类似，小于4kb的图像资产将被<code>base64</code>内联。 所有静态路径引用（包括绝对路径）都应基于工作目录结构。</p><h2 id="公共文件" tabindex="-1">公共文件 <a class="header-anchor" href="#公共文件" aria-hidden="true">#</a></h2><p>有时，您可能需要提供在任何 <code>Markdown</code> 或主题组件中未直接引用的静态资源（例如，收藏夹图标和 <code>PWA</code> 图标）。 项目根目录下的 <code>public</code> 目录（如果您正在运行<code>vitepress build docs</code>，则为<code>docs</code>文件夹）可用作逃生舱口，以提供从未在源代码中引用的静态资产（例如: robots.txt ），或者必须保留完全相同的文件名（ 无哈希 ）。</p><p>放置在 <code>public</code> 中的资产将按原样复制到 <code>dist</code> 目录下。</p><p>请注意，您应该使用绝对路径引用放置在<code>public</code>中的文件 - 例如，<code>public/icon.png</code> 在源代码中应始终引用为 <code>/icon.png</code>。</p><p>这里有一个例外情况： 如果您有一个<code>HTML</code>页面在<code>public</code>中并从主站点链接到它，则默认情况下路由器将产生404。</p><p>为了解决这个问题，<code>VitePress</code> 提供了一个 <code>pathname://</code> 协议，允许您链接到同一域中的另一个页面，就好像链接是外部链接一样。对比这两个链接：</p><ul><li><a href="/vitepress-docs-zh-cn/pure.html">/pure.html</a></li><li><a href="/pure.html" target="_blank" rel="noreferrer">pathname:///pure.html</a></li><li><a href="/pure.html" target="_blank" rel="noreferrer">pathname:///pure.html</a></li></ul><h2 id="base-url" tabindex="-1">Base URL <a class="header-anchor" href="#base-url" aria-hidden="true">#</a></h2><p>如果将站点部署到非根 <code>URL</code>，则需要在 <code>.vitepress/config.js</code> 中设置 <code>base</code> 选项。 例如，如果您计划将站点部署到 <code>https://foo.github.io/bar/</code>，则 <code>base</code> 应设置为“/bar/”（它应始终以斜杠开头和结尾）。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// .vitepress/config.js</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">defineConfig</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vitepress</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">base</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/bar/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>系统会自动处理所有静态资产路径，以针对不同的<code>base</code>配置值进行调整。 例如，如果您在<code>Markdowm</code>中使用绝对路径引用了<code>public</code>下的资产：</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">![</span><span style="color:#C3E88D;">An image</span><span style="color:#89DDFF;">](</span><span style="color:#A6ACCD;text-decoration:underline;">/image-inside-public.png</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>在这种情况下，更改<code>base</code>配置值时无需更新它。 然而，如果您正在创作动态链接到资产的主题组件，例如，其<code>src</code>基于主题配置值的图像：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">theme</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">logoPath</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/&gt;</span></span>
<span class="line"></span></code></pre></div><p>在这种情况下，建议使用<code>VitePress</code>提供的<code>withBase</code>助手包装路径：</p><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">setup</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">withBase</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">useData</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">vitepress</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> theme </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useData</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">img</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">:src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">withBase(theme.logoPath)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">template</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,20),p=[l];function c(t,r,i,d,D,y){return a(),e("div",null,p)}const A=s(o,[["render",c]]);export{C as __pageData,A as default};
